apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries

   task sourcesJarDY(type: Jar) {
        classifier = 'sources'

        from{
            def files = [ file('build/intermediates/bundles/release/classes.jar')]

            files.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }

    task javadocDY(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        include("**/DYApi.java")
        include("**/DYListenerItf.java")
        include("**/DYUserData.java")
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJarDY(type: Jar, dependsOn: javadocDY) {
    classifier = 'javadoc'
    from javadocDY.destinationDir
}

artifacts {
    archives javadocJarDY
    archives sourcesJarDY
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}